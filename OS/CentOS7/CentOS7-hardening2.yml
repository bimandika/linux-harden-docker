# CIS Red Hat Enterprise Linux 7 Benchmark Remediation v2.2.0 
- include: prelim.yml
  become: yes
  tags:
      - prelim_tasks
      - always
# Section 1 | Initial Setup
# 1.1 Filesystem Configuration
- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_1 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.1 | PATCH | Remove cramfs module"
  modprobe:
    name: cramfs
    state: absent
  when:
      - rhel7cis_rule_1_1_1_1 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs(\\s|$)"
      line: "install freevxfs /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_2 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.2 | PATCH | Remove freevxfs module"
  modprobe:
    name: freevxfs
    state: absent
  when:
      - rhel7cis_rule_1_1_1_2 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_3 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.3 | PATCH | Remove jffs2 module"
  modprobe:
    name: jffs2
    state: absent
  when:
      - rhel7cis_rule_1_1_1_3 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfs(\\s|$)"
      line: "install hfs /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_4 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.4 | PATCH | Remove hfs module"
  modprobe:
    name: hfs
    state: absent
  when:
      - rhel7cis_rule_1_1_1_4 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfsplus(\\s|$)"
      line: "install hfsplus /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_5 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.5 | PATCH | Remove hfsplus module"
  modprobe:
    name: hfsplus
    state: absent
  when:
      - rhel7cis_rule_1_1_1_5 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install squashfs(\\s|$)"
      line: "install squashfs /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_6 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.6 | PATCH | Remove squashfs module"
  modprobe:
    name: squashfs
    state: absent
  when:
      - rhel7cis_rule_1_1_1_6 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_7 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.7
      - udf

- name: "SCORED | 1.1.1.7 | PATCH | Remove udf module"
  modprobe:
    name: udf
    state: absent
  when:
      - rhel7cis_rule_1_1_1_7 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.7
      - udf

- name: "SCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install vfat(\\s|$)"
      line: "install vfat /bin/true"
      create: yes
  when:
      - rhel7cis_rule_1_1_1_8 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.8
      - vfat

- name: "SCORED | 1.1.1.8 | PATCH | Remove FAT module"
  modprobe:
    name: vfat
    state: absent
  when:
      - rhel7cis_rule_1_1_1_8 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat

- name: "SCORED | 1.1.2 | PATCH | Ensure separate partition exists for /tmp get back mount information associated to mountpoint"
  command: findmnt --fstab '/tmp'
  register: tmp_device_name
  failed_when: tmp_device_name.rc > 1
  changed_when: false
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.2
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "SCORED | 1.1.2 | PATCH | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  systemd:
      name: tmp.mount
      daemon_reload: yes
      enabled: yes
      masked: no
      state: started
  when:
      - rhel7cis_rule_1_1_2 | bool
      - not tmp_device_name.stdout
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.2

- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition\n
         SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition\n
         SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition\n
         | drop custom tmp.mount"
  copy:
      src: etc/systemd/system/tmp.mount
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
  notify: systemd restart tmp.mount
  when:
      - rhel7cis_rule_1_1_3 | bool
      - rhel7cis_rule_1_1_4 | bool
      - rhel7cis_rule_1_1_5 | bool
      - not tmp_device_name.stdout
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition\n
         SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition\n
         SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition\n"
  mount:
    name: "/tmp"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "rw,noexec,nodev,nosuid"
  when:
      - rhel7cis_rule_1_1_3 | bool
      - rhel7cis_rule_1_1_4 | bool
      - rhel7cis_rule_1_1_5 | bool
      - tmp_device_name.stdout
      - item.mount == "/tmp"
  with_items: "{{ ansible_mounts }}"
  notify: set tmp mount mode
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  register: var_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_1_6 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.6
      - skip_ansible_lint

- name: "SCORED | 1.1.7 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  register: var_tmp_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_1_7 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.7
      - skip_ansible_lint

- name: "SCORED | 1.1.8  | PATCH | Ensure nodev option set on /var/tmp partition\n
         SCORED | 1.1.9  | PATCH | Ensure nosuid option set on /var/tmp partition\n
         SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ rhel7cis_vartmp['source'] }}"
      state: mounted
      fstype: "{{ rhel7cis_vartmp['fstype'] }}"
      opts: "{{ rhel7cis_vartmp['opts'] }}"
  when:
      - rhel7cis_vartmp['enabled'] == 'yes'
      - rhel7cis_rule_1_1_8 | bool
      - rhel7cis_rule_1_1_9 | bool
      - rhel7cis_rule_1_1_10 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.8
      - rule_1.1.9
      - rule_1.1.10

- name: "SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_1_11 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.11
      - skip_ansible_lint

- name: "SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_1_12 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.12
      - skip_ansible_lint

- name: "SCORED | 1.1.13 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "on /home"
  register: home_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_1_13 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.13
      - skip_ansible_lint

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
    name: "/home"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
      - rhel7cis_rule_1_1_14  | bool
      - item.mount == "/home"
  with_items: "{{ ansible_mounts }}"
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.14

- name: "SCORED | C2S | PATCH | Ensure nodev option set on /var partition"
  mount:
    name: "/var"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
      - rhel7cis_rule_1_1_14  | bool
      - item.mount == "/var"
  with_items: "{{ ansible_mounts }}"
  tags:
      - c2s
      - patch

- name: "SCORED | C2S | PATCH | Ensure nodev option set on /var/log partition"
  mount:
    name: "/var/log"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
      - rhel7cis_rule_1_1_14  | bool
      - item.mount == "/var/log"
  with_items: "{{ ansible_mounts }}"
  tags:
      - c2s
      - patch

- name: "SCORED | C2S | PATCH | Ensure nodev option set on /var/log/audit partition"
  mount:
    name: "/var/log/audit"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
      - rhel7cis_rule_1_1_14  | bool
      - item.mount == "/var/log/audit"
  with_items: "{{ ansible_mounts }}"
  tags:
      - c2s
      - patch

- name: "SCORED | C2S | PATCH | Ensure nodev option set on /boot partition"
  mount:
    name: "/boot"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
      - rhel7cis_rule_1_1_14  | bool
      - item.mount == "/boot"
  with_items: "{{ ansible_mounts }}"
  tags:
      - c2s
      - patch

- name: "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition\n
         SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition\n
         SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,nodev,nosuid,noexec"
  when:
      - rhel7cis_rule_1_1_15 | bool
      - rhel7cis_rule_1_1_16 | bool
      - rhel7cis_rule_1_1_17 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17

- name: "NOTSCORED | 1.1.18 | PATCH | Ensure nodev option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - rhel7cis_rule_1_1_18 | bool
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.18

- name: "NOTSCORED | 1.1.19 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - rhel7cis_rule_1_1_19 | bool
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.19

- name: "NOTSCORED | 1.1.20 | PATCH | Ensure noexec option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - rhel7cis_rule_1_1_20 | bool
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.20

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: set -o pipefail && df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  args:
    warn: false
    executable: /bin/bash
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_1_21 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.21

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: no
  when:
      - not rhel7cis_allow_autofs and autofs_service_status.stdout == "loaded"
      - rhel7cis_rule_1_1_22 | bool
  tags:
      - level1
      - patch
      - rule_1.1.22

# 1.2 Configure Software Updates      
- name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
  command: yum check-update
  register: yum_configured
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_1_2_1 | bool
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.1
      - skip_ansible_lint

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  replace:
      name: /etc/yum.conf
      regexp: "^gpgcheck=0"
      replace: "gpgcheck=1"
  when:
      - rhel7cis_rule_1_2_2 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  find:
      paths: /etc/yum.repos.d
      patterns: "*.repo"
  register: yum_repos
  changed_when: no
  when:
      - rhel7cis_rule_1_2_2 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  replace:
      name: "{{ item.path }}"
      regexp: "^gpgcheck=0"
      replace: "gpgcheck=1"
  with_items:
      - "{{ yum_repos.files }}"
  when:
      - rhel7cis_rule_1_2_2 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: "NOTSCORED | 1.2.3 | PATCH | Ensure GPG keys are configured"
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ ansible_distribution|lower }}-release
  when:
      - rhel7cis_rule_1_2_3 | bool
      - ansible_distribution == "RedHat"
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.3

- name: "NOTSCORED | 1.2.4 | PATCH | Ensure Red Hat Network or Subscription Manager connection is configured"
  command: subscription-manager identity
  changed_when: no
  failed_when: no
  when:
      - ansible_distribution == "RedHat"
      - rhel7cis_rule_1_2_4 | bool
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.4

- name: "NOTSCORED | 1.2.5 | PATCH | Disable the rhnsd Daemon"
  service:
      name: rhnsd
      state: stopped
      enabled: no
  when:
      - ansible_distribution == "RedHat" and rhnsd_service_status.stdout == "loaded" and not rhel7cis_rhnsd_required
      - rhel7cis_rule_1_2_5 | bool
  tags:
      - level2
      - notscored
      - patch
      - rule_1.2.5

# 1.3 Filesystem Integrity Checking
- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  yum:
      name: aide
      state: present
  when:
      - rhel7cis_rule_1_3_1 | bool
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
  args:
      creates: /var/lib/aide/aide.db.gz
  changed_when: no
  failed_when: no
  async: 45
  poll: 0
  notify: start aide check
  when:
      - rhel7cis_config_aide | bool
      - rhel7cis_rule_1_3_1 | bool
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check weekly
      cron_file: "{{ rhel7cis_aide_cron['cron_file'] }}"
      user: "{{ rhel7cis_aide_cron['cron_user'] }}"
      minute: "{{ rhel7cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel7cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel7cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel7cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel7cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel7cis_aide_cron['aide_job'] }}"
  when:
      - rhel7cis_rule_1_3_2 | bool
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - patch
      - rule_1.3.2

# 1.4 Secure Boot Settings
- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
      path: /etc/grub2.cfg
  register: grub_cfg
  when:
      - rhel7cis_rule_1_4_1 | bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
      path: "{{ grub_cfg.stat.lnk_source }}"
      owner: root
      group: root
      mode: 0600
  when:
      - grub_cfg.stat.exists and grub_cfg.stat.islnk
      - rhel7cis_rule_1_4_1 | bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
      path: /boot/grub2/user.cfg
  register: grub_user
  when:
      - rhel7cis_rule_1_4_1 | bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
      path: /boot/grub2/grub.cfg
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_1_4_1 | bool
      - grub_cfg.stat.exists | bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
      path: /boot/grub2/user.cfg
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_1_4_1 | bool
      - grub_user.stat.exists | bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode"
  block:
      - name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode - Emergency"
        lineinfile:
          dest: /usr/lib/systemd/system/emergency.service
          regexp: '/sbin/sulogin'
          line: 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"'
        when:
          - rhel7cis_rule_1_4_3 | bool
          - ansible_distribution_major_version == 7
        tags:
          - level1
          - level2
          - patch
          - rule_1.4.3
      - name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode - Rescue"
        lineinfile:
          dest: /usr/lib/systemd/system/rescue.service
          regexp: '/sbin/sulogin'
          line: 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"'
        when:
          - rhel7cis_rule_1_4_3 | bool
          - ansible_distribution_major_version == 7
        tags:
          - level1
          - level2
          - patch
          - rule_1.4.3

# 1.5 Additional Process Hardening
- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  lineinfile:
      state: present
      create: true
      dest: /etc/security/limits.conf
      regexp: '^#?\\*.*core'
      line: '*                hard    core            0'
      insertbefore: '^# End of file'
  when:
      - rhel7cis_rule_1_5_1 | bool
  tags:
      - level1
      - scored
      - limits
      - patch
      - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  sysctl:
      name: fs.suid_dumpable
      value: '0'
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
      - rhel7cis_rule_1_5_1 | bool
  tags:
      - level1
      - scored
      - sysctl
      - patch
      - rule_1.5.1

- name: "NOTSCORED | 1.5.2 | PATCH | Ensure XD/NX support is enabled"
  shell: set -o pipefail && dmesg|grep -E "NX|XD" | grep " active"
  args:
    warn: false
    executable: /bin/bash
  changed_when: no
  when:
      - rhel7cis_rule_1_5_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_1.5.2

- name: "SCORED | 1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: '2'
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
      - rhel7cis_rule_1_5_3 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.3

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  command: prelink -ua
  when:
      - prelink_installed.rc == 0
      - rhel7cis_rule_1_5_4 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  yum:
    name: prelink
    state: absent
  when:
      - rhel7cis_rule_1_5_4 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

# 1.6 Mandatory Access Control
- name: "SCORED | 1.6.1.1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
      - rhel7cis_rule_1_6_1_1 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.1

- name: "SCORED | 1.6.1.2 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel7cis_selinux_disable
      - rhel7cis_rule_1_6_1_2 | bool
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.2

- name: "SCORED | 1.6.1.3 | PATCH | Ensure SELinux policy is configured"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel7cis_selinux_disable
      - rhel7cis_rule_1_6_1_3 | bool
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.3

- name: "SCORED | 1.6.1.4 | PATCH | Ensure SETroubleshoot is not installed"
  yum:
      name: setroubleshoot
      state: absent
  when:
      - rhel7cis_rule_1_6_1_4 | bool
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.4

- name: "SCORED | 1.6.1.5 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  yum:
      name: mcstrans
      state: absent
  when:
      - rhel7cis_rule_1_6_1_5 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.5

- name: "SCORED | 1.6.2 | PATCH | Ensure SELinux is installed"
  yum:
      name: libselinux
      state: present
  when:
      - rhel7cis_rule_1_6_2 | bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.2

# 1.7 Warning Banners
- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
  when:
      - rhel7cis_rule_1_7_1_1 | bool
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.1

- name: "NOTSCORED | 1.7.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
  when:
      - rhel7cis_rule_1_7_1_2 | bool
  tags:
      - level1
      - patch
      - rule_1.7.1.2

- name: "NOTSCORED | 1.7.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
  when:
      - rhel7cis_rule_1_7_1_3 | bool
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.3

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_1_4 | bool
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.4

- name: "SCORED | 1.7.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_1_5 | bool
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.5

- name: "NOTSCORED | 1.7.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_1_6 | bool
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.6

- name: "SCORED | 1.7.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      dest: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
      create: yes
      owner: root
      group: root
      mode: 0644
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp:  'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-text', line: "banner-message-text='{{ rhel7cis_warning_banner }}' " }
  when:
      - rhel7cis_gui | bool
      - rhel7cis_rule_1_7_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.2

- name: "NOTSCORED | 1.8 | PATCH | Ensure updates, patches, and additional security software are installed"
  yum:
      name: "*"
      state: latest
  when:
      - rhel7cis_rule_1_8 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_1.8
      - skip_ansible_lint

# Section 2 | Services
# 2.1 inetd Services
- name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram,chargen-stream"
  block:
      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram"
        stat:
            path: /etc/xinetd.d/chargen-dgram
        register: chargen_dgram_service

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram"
        command: chkconfig chargen-dgram off
        notify: restart xinetd
        when: chargen_dgram_service.stat.exists
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-stream"
        stat:
            path: /etc/xinetd.d/chargen-stream
        register: chargen_stream_service

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-stream"
        command: chkconfig chargen-stream off
        notify: restart xinetd
        when: chargen_stream_service.stat.exists
        tags:
            - skip_ansible_lint
  when:
      - rhel7cis_rule_2_1_1 | bool
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.1

- name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram,daytime-stream"
  block:
      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram"
        stat:
            path: /etc/xinetd.d/daytime-dgram
        register: daytime_dgram_service

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram"
        command: chkconfig daytime-dgram off
        notify: restart xinetd
        when: daytime_dgram_service.stat.exists
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-stream"
        stat:
            path: /etc/xinetd.d/daytime-stream
        register: daytime_stream_service

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-stream"
        command: chkconfig daytime-stream off
        notify: restart xinetd
        when: daytime_stream_service.stat.exists
        tags:
            - skip_ansible_lint
  when:
      - rhel7cis_rule_2_1_2 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.2

- name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram,discard-stream"
  block:
      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram"
        stat:
            path: /etc/xinetd.d/discard-dgram
        register: discard_dgram_service

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram"
        command: chkconfig discard-dgram off
        notify: restart xinetd
        when: discard_dgram_service.stat.exists
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-stream"
        stat:
            path: /etc/xinetd.d/discard-stream
        register: discard_stream_service

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-stream"
        command: chkconfig discard-stream off
        notify: restart xinetd
        when: discard_stream_service.stat.exists
        tags:
            - skip_ansible_lint

  when:
      - rhel7cis_rule_2_1_3 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.3

- name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram,echo-stream"
  block:
      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram"
        stat:
            path: /etc/xinetd.d/echo-dgram
        register: echo_dgram_service

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram"
        command: chkconfig echo-dgram off
        notify: restart xinetd
        when: echo_dgram_service.stat.exists
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-stream"
        stat:
            path: /etc/xinetd.d/echo-stream
        register: echo_stream_service

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-stream"
        command: chkconfig echo-stream off
        notify: restart xinetd
        when: echo_stream_service.stat.exists
        tags:
            - skip_ansible_lint

  when:
      - rhel7cis_rule_2_1_4 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.4

- name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram,time-stream"
  block:
      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram"
        stat:
            path: /etc/xinetd.d/time-dgram
        register: time_dgram_service

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram"
        command: chkconfig time-dgram off
        notify: restart xinetd
        when: time_dgram_service.stat.exists
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-stream"
        stat:
            path: /etc/xinetd.d/time-stream
        register: time_stream_service

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-stream"
        command: chkconfig time-stream off
        notify: restart xinetd
        when: time_stream_service.stat.exists
        tags:
            - skip_ansible_lint

  when:
      - rhel7cis_rule_2_1_5 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.5

- name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
  block:
      - name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
        stat:
            path: /etc/xinetd.d/tftp
        register: tftp_service

      - name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
        command: chkconfig tftp off
        notify: restart xinetd
        when: not tftp_service.stat.exists and rhel7cis_tftp_server
        tags:
            - skip_ansible_lint

  when:
      - rhel7cis_rule_2_1_6 | bool
  tags:
      - level1
      - scored
      - patch
      - rule_2.1.6

- name: "SCORED | 2.1.7 | PATCH | Ensure xinetd is not enabled"
  service:
      name: xinetd
      state: stopped
      enabled: no
  when:
      - xinetd_service_status.stdout == "loaded" and not rhel7cis_xinetd_required
      - rhel7cis_rule_2_1_7 | bool
  tags:
      - level1
      - patch
      - scored
      - rule_2.1.7

# 2.2 Special Purpose Services
- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service install"
  yum:
      name: "{{ rhel7cis_time_synchronization }}"
      state: present
  when:
      - rhel7cis_rule_2_2_1_1 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service start"
  service:
      name: "{{ rhel7cis_time_synchronization }}d"
      state: started
      enabled: yes
  when:
      - rhel7cis_rule_2_2_1_1 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop ntp"
  service:
      name: ntpd
      state: stopped
      enabled: no
  when:
      - rhel7cis_time_synchronization == "chrony" and ntpd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_1_1 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop chrony"
  service:
      name: chronyd
      state: stopped
      enabled: no
  ignore_errors: yes
  when:
      - rhel7cis_time_synchronization == "ntp" and chronyd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_1_1 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.1

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /etc/ntp.conf"
  template:
      src: ntp.conf.j2
      dest: /etc/ntp.conf
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_time_synchronization == "ntp"
      - rhel7cis_rule_2_2_1_2 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.2

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /etc/sysconfig/ntpd"
  lineinfile:
      dest: /etc/sysconfig/ntpd
      regexp: "^(#)?OPTIONS"
      line: "OPTIONS=\"-u ntp:ntp\""
  when:
      - rhel7cis_time_synchronization == "ntp"
      - rhel7cis_rule_2_2_1_2 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.2

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /usr/lib/systemd/system/ntpd.service"
  lineinfile:
      dest: /usr/lib/systemd/system/ntpd.service
      regexp: "^(#)?ExecStart"
      line: "ExecStart=/usr/sbin/ntpd -u ntp:ntp $OPTIONS"
  when:
      - rhel7cis_time_synchronization == "ntp"
      - rhel7cis_rule_2_2_1_2 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.2

- name: "SCORED | 2.2.1.3 | PATCH | Ensure chrony is configured"
  template:
      src: chrony.conf.j2
      dest: /etc/chrony.conf
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_time_synchronization == "chrony"
      - rhel7cis_rule_2_2_1_3 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.3

- name: "SCORED | 2.2.1.3 | PATCH | Ensure chrony is configured | modify /etc/sysconfig/chronyd | 1"
  lineinfile:
      dest: /etc/sysconfig/chronyd
      regexp: "^(#)?OPTIONS"
      line: "OPTIONS=\"-u chrony\""
      state: present
      create: yes
  when:
      - rhel7cis_time_synchronization == "chrony"
      - rhel7cis_rule_2_2_1_3 | bool
  tags:
      - level1
      - patch
      - rule_2.2.1.3

- name: "SCORED | 2.2.2 | PATCH | Ensure X Window System is not installed"
  yum:
      name: "{{ item }}"
      state: absent
  with_items:
      - "@X Window System"
      - "xorg-x11*"
  when:
      - not rhel7cis_xwindows_required
      - rhel7cis_rule_2_2_2 | bool
  tags:
      - level1
      - scored
      - xwindows
      - patch
      - rule_2.2.2

- name: "SCORED | 2.2.3 | PATCH | Ensure Avahi Server is not enabled"
  service:
      name: avahi-daemon
      state: stopped
      enabled: no
  when:
      - not rhel7cis_avahi_server and avahi_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_3 | bool
  tags:
      - level1
      - scored
      - avahi
      - services
      - patch
      - rule_2.2.3

- name: "SCORED | 2.2.4 | PATCH | Ensure CUPS is not enabled"
  service:
      name: cups
      state: stopped
      enabled: no
  when:
      - not rhel7cis_cups_server and cups_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_4 | bool
  tags:
      - level1
      - scored
      - cups
      - services
      - patch
      - rule_2.2.4

- name: "SCORED | 2.2.5 | PATCH | Ensure DHCP Server is not enabled"
  service:
      name: dhcpd
      state: stopped
      enabled: no
  when:
      - not rhel7cis_dhcp_server and dhcpd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_5 | bool
  tags:
      - level1
      - scored
      - dhcp
      - services
      - patch
      - rule_2.2.5

- name: "SCORED | 2.2.6 | PATCH | Ensure LDAP server is not enabled"
  service:
      name: slapd
      state: stopped
      enabled: no
  when:
      - not rhel7cis_ldap_server and slapd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_6 | bool
  tags:
      - level1
      - scored
      - ldap
      - services
      - patch
      - rule_2.2.6

- name: "SCORED | 2.2.7 | PATCH | Ensure NFS and RPC are not enabled"
  service:
      name: nfs
      state: stopped
      enabled: no
  when:
      - not rhel7cis_nfs_rpc_server and nfs_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_7 | bool
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7

- name: "SCORED | 2.2.7 | PATCH | Ensure RPC is not enabled"
  service:
      name: rpcbind
      state: stopped
      enabled: no
  when:
      - not rhel7cis_nfs_rpc_server and rpcbind_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_7 | bool
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7

- name: "SCORED | 2.2.8 | PATCH | Ensure DNS Server is not enabled"
  service:
      name: named
      state: stopped
      enabled: no
  when:
      - not rhel7cis_named_server and named_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_8 | bool
  tags:
      - level1
      - patch
      - rule_2.2.8

- name: "SCORED | 2.2.9 | PATCH | Ensure FTP Server is not enabled"
  service:
      name: vsftpd
      state: stopped
      enabled: no
  when:
      - not rhel7cis_vsftpd_server and vsftpd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_9 | bool
  tags:
      - level1
      - patch
      - rule_2.2.9

- name: "SCORED | 2.2.10 | PATCH | Ensure HTTP server is not enabled"
  service:
      name: httpd
      state: stopped
      enabled: no
  when:
      - not rhel7cis_httpd_server and httpd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_10 | bool
  tags:
      - level1
      - patch
      - rule_2.2.10

- name: "SCORED | 2.2.11 | PATCH | Ensure IMAP and POP3 server is not enabled"
  service:
      name: dovecot
      state: stopped
      enabled: no
  when:
      - not rhel7cis_dovecot_server and dovecot_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_11 | bool
  tags:
      - level1
      - patch
      - rule_2.2.11

- name: "SCORED | 2.2.12 | PATCH | Ensure Samba is not enabled"
  service:
      name: smb
      state: stopped
      enabled: no
  when:
      - not rhel7cis_smb_server and smb_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_12 | bool
  tags:
      - level1
      - patch
      - rule_2.2.12

- name: "SCORED | 2.2.13 | PATCH | Ensure HTTP Proxy Server is not enabled"
  service:
      name: squid
      state: stopped
      enabled: no
  when:
      - not rhel7cis_squid_server and squid_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_13 | bool
  tags:
      - level1
      - patch
      - rule_2.2.13

- name: "SCORED | 2.2.14 | PATCH | Ensure SNMP Server is not enabled"
  service:
      name: snmpd
      state: stopped
      enabled: no
  when:
      - not rhel7cis_snmp_server and snmpd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_14 | bool
  tags:
      - level1
      - patch
      - rule_2.2.14

- name: "SCORED | 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode"
  lineinfile:
      dest: /etc/postfix/main.cf
      regexp: "^(#)?inet_interfaces"
      line: "inet_interfaces = loopback-only"
  when:
      - not rhel7cis_is_mail_server and postfix_installed.rc == 0
      - rhel7cis_rule_2_2_15 | bool
  tags:
      - level1
      - patch
      - rule_2.2.15

- name: "SCORED | 2.2.16 | PATCH | Ensure NIS Server is not enabled"
  service:
      name: ypserv
      state: stopped
      enabled: no
  when:
      - not rhel7cis_nis_server and ypserv_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_16 | bool
  tags:
      - level1
      - patch
      - rule_2.2.16

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rsh"
  service:
      name: rsh.socket
      state: stopped
      enabled: no
  when:
      - not rhel7cis_rsh_server and rsh_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_17 | bool
  tags:
      - level1
      - patch
      - rule_2.2.17

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rlogin"
  service:
      name: rlogin.socket
      state: stopped
      enabled: no
  when:
      - not rhel7cis_rsh_server and rlogin_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_17 | bool
  tags:
      - level1
      - patch
      - rule_2.2.17

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rexec"
  service:
      name: rexec.socket
      state: stopped
      enabled: no
  when:
      - not rhel7cis_rsh_server and rexec_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_17 | bool
  tags:
      - level1
      - patch
      - rule_2.2.17

- name: "SCORED | 2.2.18 | PATCH | Ensure talk server is not enabled"
  service:
      name: ntalk
      state: stopped
      enabled: no
  when:
      - not rhel7cis_ntalk_server and ntalk_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_18 | bool
  tags:
      - level1
      - patch
      - rule_2.2.18

- name: "SCORED | 2.2.19 | PATCH | Ensure telnet server is not enabled"
  service:
      name: telnet
      state: stopped
      enabled: no
  when:
      - not rhel7cis_telnet_server and telnet_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_19 | bool
  tags:
      - level1
      - patch
      - rule_2.2.19

- name: "SCORED | 2.2.20 | PATCH | Ensure tftp server is not enabled"
  service:
      name: tftp
      state: stopped
      enabled: no
  when:
      - not rhel7cis_tftp_server and tftp_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_20 | bool
  tags:
      - level1
      - scored
      - insecure_services
      - tftp
      - patch
      - rule_2.2.20

- name: "SCORED | 2.2.21 | PATCH | Ensure rsync service is not enabled "
  service:
      name: rsyncd
      state: stopped
      enabled: no
  when:
      - not rhel7cis_rsyncd_server and rsyncd_service_status.stdout == "loaded"
      - rhel7cis_rule_2_2_21 | bool
  tags:
      - level1
      - patch
      - rule_2.2.21


# 2.3 Service Clients
- name: "SCORED | 2.3.1 | PATCH | Ensure NIS Client is not installed"
  yum:
      name: ypbind
      state: absent
  when:
      - not rhel7cis_ypbind_required
      - rhel7cis_rule_2_3_1 | bool
  tags:
      - level1
      - patch
      - rule_2.3.1

- name: "SCORED | 2.3.2 | PATCH | Ensure rsh client is not installed"
  yum:
      name: rsh
      state: absent
  when:
      - not rhel7cis_rsh_required
      - rhel7cis_rule_2_3_2 | bool
  tags:
      - level1
      - patch
      - rule_2.3.2

- name: "SCORED | 2.3.3 | PATCH | Ensure talk client is not installed"
  yum:
      name: talk
      state: absent
  when:
      - not rhel7cis_talk_required
      - rhel7cis_rule_2_3_3 | bool
  tags:
      - level1
      - patch
      - rule_2.3.3

- name: "SCORED | 2.3.4 | PATCH | Ensure telnet client is not installed"
  yum:
      name: telnet
      state: absent
  when:
      - not rhel7cis_telnet_required
      - rhel7cis_rule_2_3_4 | bool
  tags:
      - level1
      - patch
      - rule_2.3.4

- name: "SCORED | 2.3.5 | PATCH | Ensure LDAP client is not installed"
  yum:
      name: openldap-clients
      state: absent
  when:
      - not rhel7cis_openldap_clients_required
      - rhel7cis_rule_2_3_5 | bool
  tags:
      - level1
      - patch
      - rule_2.3.5

# Section 3 | Network Configuration
# 3.1 Network Parameters (Host Only)
- name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled"
  sysctl:
      name: net.ipv4.ip_forward
      value: 0
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - not rhel7cis_is_router
      - rhel7cis_rule_3_1_1 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.1

- name: "SCORED | 3.1.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - not rhel7cis_is_router
      - rhel7cis_rule_3_1_2 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.2

# 3.2 Network Parameters (Host and Router)
- name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_1 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.1

- name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_2 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.2

- name: "SCORED | 3.2.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_3 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.3

- name: "SCORED | 3.2.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_4 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.4

- name: "SCORED | 3.2.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_5 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.5

- name: "SCORED | 3.2.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_6 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.6

- name: "SCORED | 3.2.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_7 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.7

- name: "SCORED | 3.2.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_2_8 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.8

# 3.3 IPv6
- name: "SCORED | 3.3.1 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  when:
      - rhel7cis_ipv6_required | bool
      - rhel7cis_rule_3_3_1 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.3.1

- name: "SCORED | 3.3.2 | PATCH | Ensure IPv6 redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  when:
      - rhel7cis_ipv6_required | bool
      - rhel7cis_rule_3_3_2 | bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.3.2

- name: "NOTSCORED | 3.3.3 | PATCH | Ensure IPv6 is disabled ( modprobe )"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?options ipv6 disable="
      line: "options ipv6 disable=1"
      create: yes
  when:
      - not rhel7cis_ipv6_required
      - rhel7cis_rule_3_3_3 | bool
  tags:
      - level1
      - patch
      - rule_3.3.3
- name: "NOTSCORED | 3.3.3 | PATCH | Ensure IPv6 is disabled ( sysctl )"
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: 1
    state: present
    reload: true
  when:
      - not rhel7cis_ipv6_required
      - rhel7cis_rule_3_3_3 | bool
  tags:
      - level1
      - patch
      - rule_3.3.3

# 3.4 TCP Wrappers
- name: "SCORED | 3.4.1 | PATCH | Ensure TCP Wrappers is installed"
  yum:
    name: tcp_wrappers
    state: present
  when:
      - rhel7cis_rule_3_4_1 | bool
  tags:
      - level1
      - patch
      - rule_3.4.1

- name: "SCORED | 3.4.2 | PATCH | Ensure /etc/hosts.allow is configured"
  template:
      src: hosts.allow.j2
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_3_4_2 | bool
  tags:
      - level1
      - patch
      - rule_3.4.2

- name: "SCORED | 3.4.3 | PATCH | Ensure /etc/hosts.deny is configured"
  lineinfile:
      dest: /etc/hosts.deny
      regexp: "^(#)?ALL"
      line: "ALL: ALL"
  when:
      - rhel7cis_rule_3_4_3 | bool
  tags:
      - level1
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.4 | PATCH | Ensure permissions on /etc/hosts.allow are configured"
  file:
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_3_4_4 | bool
  tags:
      - level1
      - patch
      - rule_3.4.4

- name: "SCORED | 3.4.5 | PATCH | Ensure permissions on /etc/hosts.deny are 644"
  file:
      dest: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_3_4_5 | bool
  tags:
      - level1
      - patch
      - rule_3.4.5

# 3.5 Uncommon Network Protocols
- name: "NOTSCORED | 3.5.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install dccp(\\s|$)"
      line: "install dccp /bin/true"
      create: yes
  when:
      - rhel7cis_rule_3_5_1 | bool
  tags:
      - level1
      - patch
      - rule_3.5.1

- name: "NOTSCORED | 3.5.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install sctp(\\s|$)"
      line: "install sctp /bin/true"
      create: yes
  when:
      - rhel7cis_rule_3_5_2 | bool
  tags:
      - level1
      - patch
      - rule_3.5.2

- name: "NOTSCORED | 3.5.3 | PATCH | Ensure RDS is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install rds(\\s|$)"
      line: "install rds /bin/true"
      create: yes
  when:
      - rhel7cis_rule_3_5_3 | bool
  tags:
      - level1
      - patch
      - rule_3.5.3

- name: "NOTSCORED | 3.5.4 | PATCH | Ensure TIPC is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install tipc(\\s|$)"
      line: "install tipc /bin/true"
      create: yes
  when:
      - rhel7cis_rule_3_5_4 | bool
  tags:
      - level1
      - patch
      - rule_3.5.4

# 3.6 Firewall Configuration
- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started"
  yum:
      name: firewalld
      state: present
  when: rhel7cis_firewall == "firewalld"
  tags:
      - level1
      - patch
      - rule_3.6

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started"
  yum:
      name: firewalld
      state: present
  when: rhel7cis_firewall == "firewalld"
  tags:
      - level1
      - patch
      - rule_3.6

- name: "SCORED | 3.6.1 | PATCH | Ensure iptables is installed"
  yum:
      name: iptables
      state: present
  when:
      - rhel7cis_firewall == "iptables"
      - rhel7cis_rule_3_6_1 | bool
  tags:
      - level1
      - patch
      - rule_3.6.1

- name: "SCORED | 3.6.1 | PATCH | Ensure iptables is installed and started"
  service:
      name: iptables
      state: started
      enabled: yes
  when:
      - rhel7cis_firewall == "iptables"
      - rhel7cis_rule_3_6_1 | bool
  tags:
      - level1
      - patch
      - rule_3.6.1

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  lineinfile:
      dest: /etc/firewalld/firewalld.conf
      regexp: "^DefaultZone"
      line: "DefaultZone=drop"
  when:
      - rhel7cis_firewall == "firewalld"
      - rhel7cis_rule_3_6_2 | bool
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  firewalld:
      state: enabled
      zone: drop
      permanent: true
  when:
      - rhel7cis_firewall == "firewalld"
      - rhel7cis_rule_3_6_2 | bool
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_firewall == "iptables"
      - rhel7cis_rule_3_6_2 | bool
  tags:
      - level1
      - patch
      - rule_3.6.2
      - notimplemented

- name: "SCORED | 3.6.3 | PATCH | Ensure loopback traffic is configured"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_firewall == "iptables"
      - rhel7cis_rule_3_6_3 | bool
  tags:
      - level1
      - patch
      - rule_3.6.3
      - notimplemented

- name: "NOTSCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_firewall == "iptables"
      - rhel7cis_rule_3_6_4 | bool
  tags:
      - level1
      - patch
      - rule_3.6.4
      - notimplemented

- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
  firewalld:
      service: "{{ item }}"
      state: enabled
      zone: drop
      permanent: true
      immediate: true
  notify: restart firewalld
  with_items: "{{ rhel7cis_firewall_services }}"
  when:
      - rhel7cis_firewall == "firewalld"
      - rhel7cis_rule_3_6_5 | bool
  tags:
      - level1
      - patch
      - rule_3.6.5

- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_firewall == "iptables"
      - rhel7cis_rule_3_6_5 | bool
  tags:
      - level1
      - patch
      - rule_3.6.5
      - notimplemented

- name: "NOTSCORED | 3.7 | PATCH | Ensure wireless interfaces are disabled"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_3.7

# Section 4 | Logging and Auditing
# 4.1 Configure System Accounting (auditd)
- name: "NOTSCORED | 4.1.1.1 | PATCH | Ensure audit log storage size is configured"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^max_log_file( |=)"
      line: "max_log_file = 20"
      state: present
  when:
      - rhel7cis_rule_4_1_1_1 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.1.1

- name: "SCORED | 4.1.1.2 | PATCH | Ensure system is disabled when audit logs are full"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^admin_space_left_action"
      line: "admin_space_left_action = {{ rhel7cis_auditd['admin_space_left_action'] }}"
      state: present
  when:
      - rhel7cis_rule_4_1_1_2 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.1.2

- name: "SCORED | 4.1.1.2 | PATCH | Ensure email on non-admin audit space alert"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^space_left_action"
      line: "space_left_action = email"
      state: present
  when:
      - rhel7cis_rule_4_1_1_2 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.1.2

- name: "SCORED | 4.1.1.3 | PATCH | Ensure audit logs are not automatically deleted"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^max_log_file_action"
      line: "max_log_file_action = {{ rhel7cis_auditd['max_log_file_action'] }}"
      state: present
  when:
      - rhel7cis_rule_4_1_1_3 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.1.3

- name: "SCORED | 4.1.2 | PATCH | Ensure auditd service is enabled"
  service:
      name: auditd
      state: started
      enabled: yes
  when:
      - not rhel7cis_skip_for_travis
      - rhel7cis_rule_4_1_2 | bool
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.2

- name: "SCORED | 4.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
  replace:
      dest: /etc/default/grub
      regexp: '(^GRUB_CMDLINE_LINUX\s*\=\s*)(?:")(.+)(?<!audit=1)(?:")'
      replace: '\1"\2 audit=1"'
      follow: yes
  ignore_errors: yes
  notify: generate new grub config
  when:
      - rhel7cis_rule_4_1_3 | bool
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.3

- name: "SCORED | 4.1.4 | PATCH | Ensure events that modify date and time information are collected"
  template:
      src: audit/rhel7cis_rule_4_1_4.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_4.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_4 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.4

- name: "SCORED | 4.1.5 | PATCH | Ensure events that modify user/group information are collected"
  template:
      src: audit/rhel7cis_rule_4_1_5.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_5.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_5 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.5

- name: "SCORED | 4.1.6 | PATCH | Ensure events that modify the system's network environment are collected"
  template:
      src: audit/rhel7cis_rule_4_1_6.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_6.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_6 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.6

- name: "SCORED | 4.1.7 | PATCH | Ensure events that modify the system's Mandatory Access Controls are collected"
  template:
      src: audit/rhel7cis_rule_4_1_7.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_7.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_7 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.7

- name: "SCORED | 4.1.8 | PATCH | Ensure login and logout events are collected"
  template:
      src: audit/rhel7cis_rule_4_1_8.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_8.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_8 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.8

- name: "SCORED | 4.1.9 | PATCH | Ensure session initiation information is collected"
  template:
      src: audit/rhel7cis_rule_4_1_9.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_9.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_9 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.9

- name: "SCORED | 4.1.10 | PATCH | Ensure discretionary access control permission modification events are collected"
  template:
      src: audit/rhel7cis_rule_4_1_10.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_10.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_10 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.10

- name: "SCORED | 4.1.11 | PATCH | Ensure unsuccessful unauthorized file access attempts are collected"
  template:
      src: audit/rhel7cis_rule_4_1_11.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_11.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_11 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.11

- name: "SCORED | 4.1.12 | PATCH | Ensure use of privileged commands is collected"
  shell: set -o pipefail && for i in  $(df | grep '^/dev' | awk '{ print $NF }'); do find $i -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null; done
  args:
    warn: false
    executable: /bin/bash
  register: priv_procs
  changed_when: no
  check_mode: no
  when:
      - rhel7cis_rule_4_1_12 | bool
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.12

- name: "SCORED | 4.1.12 | PATCH | Ensure use of privileged commands is collected"
  template:
      src: audit/rhel7cis_rule_4_1_12.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_12.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_12 | bool
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.12

- name: "SCORED | 4.1.13 | PATCH | Ensure successful file system mounts are collected"
  template:
      src: audit/rhel7cis_rule_4_1_13.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_13.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_13 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.13

- name: "SCORED | 4.1.14 | PATCH | Ensure file deletion events by users are collected"
  template:
      src: audit/rhel7cis_rule_4_1_14.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_14.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_14 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.14

- name: "SCORED | 4.1.15 | PATCH | Ensure changes to system administration scope (sudoers) is collected"
  template:
      src: audit/rhel7cis_rule_4_1_15.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_15.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_15 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.15

- name: "SCORED | 4.1.16 | PATCH | Ensure system administrator actions (sudolog) are collected"
  template:
      src: audit/rhel7cis_rule_4_1_16.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_16.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_16 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.16

- name: "SCORED | 4.1.17 | PATCH | Ensure kernel module loading and unloading is collected"
  template:
      src: audit/rhel7cis_rule_4_1_17.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_17.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_17 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.17

- name: "SCORED | 4.1.18 | PATCH | Ensure the audit configuration is immutable"
  template:
      src: audit/rhel7cis_rule_4_1_18.rules.j2
      dest: /etc/audit/rules.d/rhel7cis_rule_4_1_18.rules
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_4_1_18 | bool
  notify: restart auditd
  tags:
      - level2
      - auditd
      - patch
      - rule_4.1.18

# 4.2 Configure Logging
- name: "SCORED | 4.2.3 | PATCH | Ensure rsyslog or syslog-ng is installed"
  yum:
      name: "{{ rhel7cis_syslog }}"
      state: present
  when:
      - rhel7cis_rule_4_2_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.3

- name: "SCORED | 4.2.1.1 | PATCH | Ensure rsyslog Service is enabled"
  service:
    name: rsyslog
    enabled: 'yes'
    state: started
  when:
      - rhel7cis_rule_4_2_1_1 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.1.1

- name: "NOTSCORED | 4.2.1.2 | PATCH | Ensure logging is configured"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_4_2_1_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.1.2
      - notimplemented

- name: "SCORED | 4.2.1.3 | PATCH | Ensure rsyslog default file permissions configured"
  lineinfile:
      dest: /etc/rsyslog.conf
      regexp: '^\$FileCreateMode'
      line: '$FileCreateMode 0640'
  when:
      - rhel7cis_rule_4_2_1_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.1.3

- name: "SCORED | 4.2.1.4 | PATCH | Ensure rsyslog is configured to send logs to a remote log host"
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when:
      - rhel7cis_rule_4_2_1_4
      - rsyslog_remote_loghost | bool
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.1.4

- name: "SCORED | 4.2.4 | PATCH | Ensure permissions on all logfiles are configured"
  shell: find /var/log -type f -exec chmod g-rwx,o-rwx {} + ; find /var/log -type d -exec chmod g-wx,o-rwx {} +
  args:
    warn: false
    executable: /bin/bash
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_4_2_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_4.2.4

- name: "NOTSCORED | 4.3 | PATCH | Ensure logrotate is configured"
  find:
    paths: /etc/logrotate.d/
  register: log_rotates
  tags:
      - level1
      - level2
      - patch
      - rule_4.3

- name: "NOTSCORED | 4.3 | PATCH | Ensure logrotate is configured"
  replace:
    path: "{{ item.path }}"
    regexp: '^(\s*)(daily|weekly|monthly|yearly)$'
    replace: "\\1{{ rhel7cis_logrotate }}"
  with_items:
    - "{{ log_rotates.files }}"
    - { path: "/etc/logrotate.conf" }
  tags:
      - level1
      - level2
      - patch
      - rule_4.3

# Section 5 | Access, Authentication and Authorization
# 5.1 Configure cron
- name: "SCORED | 5.1.1 | PATCH | Ensure cron daemon is enabled"
  service:
      name: crond
      enabled: yes
  when:
      - rhel7cis_rule_5_1_1 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.1

- name: "SCORED | 5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      dest: /etc/crontab
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_5_1_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.2

- name: "SCORED | 5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      dest: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.3

- name: "SCORED | 5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      dest: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.4

- name: "SCORED | 5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      dest: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_5 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.5

- name: "SCORED | 5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      dest: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_6 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.6

- name: "SCORED | 5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      dest: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_7 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.7

- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  block:
      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/at.deny
            state: absent

      - name: "SCORED | 5.1.8 | PATCH | Check if at.allow exists"
        stat:
            path: "/etc/at.allow"
        register: p

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/at.allow
            state: '{{ "file" if  p.stat.exists else "touch" }}'
            owner: root
            group: root
            mode: 0600

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/cron.deny
            state: absent

      - name: "SCORED | 5.1.8 | PATCH | Check if cron.allow exists"
        stat:
            path: "/etc/cron.allow"
        register: p

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/cron.allow
            state: '{{ "file" if  p.stat.exists else "touch" }}'
            owner: root
            group: root
            mode: 0600
  when:
      - rhel7cis_rule_5_1_8 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

# 5.2 SSH Server Configuration
- name: "SCORED | 5.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      dest: /etc/ssh/sshd_config
      state: file
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_5_2_1 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.1

- name: "SCORED | 5.2.2 | PATCH | Ensure SSH Protocol is set to 2"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Protocol'
      line: 'Protocol 2'
  when:
      - rhel7cis_rule_5_2_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.2

- name: "SCORED | 5.2.3 | PATCH | Ensure SSH LogLevel is set to INFO"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LogLevel'
      line: 'LogLevel INFO'
  when:
      - rhel7cis_rule_5_2_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.3

- name: "SCORED | 5.2.4 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^X11Forwarding'
      line: 'X11Forwarding no'
  when:
      - rhel7cis_rule_5_2_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.4

- name: "SCORED | 5.2.5 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^(#)?MaxAuthTries \d'
      line: 'MaxAuthTries 4'
  when:
      - rhel7cis_rule_5_2_5 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.5

- name: "SCORED | 5.2.6 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^IgnoreRhosts'
      line: 'IgnoreRhosts yes'
  when:
      - rhel7cis_rule_5_2_6 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.6

- name: "SCORED | 5.2.7 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^HostbasedAuthentication'
      line: 'HostbasedAuthentication no'
  when:
      - rhel7cis_rule_5_2_7 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.7

- name: "SCORED | 5.2.8 | PATCH | Ensure SSH root login is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: 'PermitRootLogin no'
  when:
      - rhel7cis_rule_5_2_8 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.8

- name: "SCORED | 5.2.9 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitEmptyPasswords'
      line: 'PermitEmptyPasswords no'
  when:
      - rhel7cis_rule_5_2_9 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.9

- name: "SCORED | 5.2.10 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitUserEnvironment'
      line: 'PermitUserEnvironment no'
  when:
      - rhel7cis_rule_5_2_10 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.10

- name: "SCORED | 5.2.11 | PATCH | Ensure only approved ciphers are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Ciphers'
      line: "Ciphers {{ rhel7cis_sshd['ciphers'] }}"
  when:
      - rhel7cis_rule_5_2_11 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.11

- name: "SCORED | 5.2.11 | PATCH | Ensure only approved MAC algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MACs'
      line: "MACs {{ rhel7cis_sshd['macs'] }}"
  when:
      - rhel7cis_rule_5_2_11 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.11

- name: "SCORED | 5.2.12 | PATCH | Ensure SSH Idle Timeout Interval is configured"
  block:
      - name: "SCORED | 5.2.12 | PATCH | Ensure SSH Idle Timeout Interval is configured"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveInterval'
            line: "ClientAliveInterval {{ rhel7cis_sshd['clientaliveinterval'] }}"

      - name: "SCORED | 5.2.12 | PATCH | Ensure SSH ClientAliveCountMax set to <= 3"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveCountMax'
            line: "ClientAliveCountMax {{ rhel7cis_sshd['clientalivecountmax'] }}"
  when:
      - rhel7cis_rule_5_2_12 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.12

- name: "SCORED | 5.2.13 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LoginGraceTime'
      line: "LoginGraceTime {{ rhel7cis_sshd['logingracetime'] }}"
  when:
      - rhel7cis_rule_5_2_13 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.13

- name: "SCORED | 5.2.14 | PATCH | Ensure SSH access is limited"
  block:
      - name: "SCORED | 5.2.14 | PATCH | Ensure SSH access is limited - allowusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^AllowUsers"
            line: AllowUsers {{ rhel7cis_sshd['allowusers'] }}
        notify:
            - restart sshd
        when:
            - rhel7cis_sshd['allowusers']|default('')

      - name: "SCORED | 5.2.14 | PATCH | Ensure SSH access is limited - allowgroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^AllowGroups"
            line: AllowGroups {{ rhel7cis_sshd['allowgroups'] }}
        notify:
            - restart sshd
        when:
            - rhel7cis_sshd['allowgroups']|default('')

      - name: "SCORED | 5.2.14 | PATCH | Ensure SSH access is limited - denyusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^DenyUsers"
            line: DenyUsers {{ rhel7cis_sshd['denyusers'] }}
        notify:
            - restart sshd
        when:
            - rhel7cis_sshd['denyusers']|default('')

      - name: "SCORED | 5.2.14 | PATCH | Ensure SSH access is limited - denygroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^DenyGroups"
            line: DenyGroups {{ rhel7cis_sshd['denygroups'] }}
        notify:
            - restart sshd
        when:
            - rhel7cis_sshd['denygroups']|default('')
  when:
      - rhel7cis_rule_5_2_14 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.14

- name: "SCORED | 5.2.15 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Banner'
      line: 'Banner /etc/issue'
  when:
      - rhel7cis_rule_5_2_15 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.15

# 5.3 Configure PAM
- name: "SCORED | 5.3.1 | PATCH | Ensure password creation requirements are configured"
  lineinfile:
      state: present
      dest: /etc/security/pwquality.conf
      regexp: '^{{ item.key }}'
      line: '{{ item.key }} = {{ item.value }}'
  with_items:
      - { key: 'minlen',  value: '14' }
      - { key: 'dcredit', value: '-1' }
      - { key: 'ucredit', value: '-1' }
      - { key: 'ocredit', value: '-1' }
      - { key: 'lcredit', value: '-1' }
  when:
      - rhel7cis_rule_5_3_1 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.1

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Add success=1 default=bad to pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_control: '[success=1 default=bad]'
    module_arguments: ''
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Add success=1 default=bad to pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[success=1 default=bad]'
    module_path: pam_unix.so
    module_arguments: try_first_pass
    state: updated
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        ADD auth pam_faillock preauth unlock_time before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[success=1 default=bad]'
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: >
                      preauth audit silent deny={{ var_accounts_passwords_pam_faillock_deny }}
                      unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: before
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_unlock_time | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2


- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        UPDATE auth pam_faillock preauth unlock_time before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: 'required'
    module_path: pam_faillock.so
    module_arguments: >
                      preauth audit silent deny={{ var_accounts_passwords_pam_faillock_deny }}
                      unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: updated
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_unlock_time | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Add auth pam_faillock authfail unlock_interval after pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[success=1 default=bad]'
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: >
                      authfail audit deny={{ var_accounts_passwords_pam_faillock_deny }}
                      unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_unlock_time | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Add auth pam_faillock authfail unlock_interval after pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    new_type: auth
    module_arguments: >
                      authfail audit deny={{ var_accounts_passwords_pam_faillock_deny }}
                      unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: updated
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_unlock_time | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Add sufficient pam_faillock authsucc audit after [default=die]"
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    new_type: auth
    new_control: 'sufficient'
    new_module_path: pam_faillock.so
    module_arguments: >
                      authsucc audit deny={{ var_accounts_passwords_pam_faillock_deny }}
                      unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_deny | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Check sufficient pam_faillock authsucc audit after [default=die]"
  pamd:
    name: '{{ item }}'
    type: auth
    control: 'sufficient'
    module_path: pam_faillock.so
    module_arguments: >
                      authsucc audit deny={{ var_accounts_passwords_pam_faillock_deny }}
                      unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: updated
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_deny | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured\n
        Add account pam_faillock before pam_unix.so"
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_2 | bool
      - accounts_passwords_pam_faillock_deny | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2

- name: "SCORED | 5.3.3 | PATCH | Ensure password reuse is limited\n
         SCORED | 5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512"
  pamd:
    name: '{{ item }}'
    type: password
    control: sufficient
    module_path: pam_unix.so
    module_arguments: sha512 remember=5
    state: updated
  loop:
  - system-auth
  - password-auth
  when:
      - rhel7cis_rule_5_3_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.4


# 5.4 User Accounts and Environment
- name: "SCORED | 5.4.1.1 | PATCH | Ensure password expiration is 90 days or less"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MAX_DAYS'
      line: "PASS_MAX_DAYS {{ rhel7cis_pass['max_days'] }}"
  when:
      - rhel7cis_rule_5_4_1_1 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.1

- name: "SCORED | 5.4.1.2 | PATCH | Ensure minimum days between password changes is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MIN_DAYS'
      line: "PASS_MIN_DAYS {{ rhel7cis_pass['min_days'] }}"
  when:
      - rhel7cis_rule_5_4_1_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.2

- name: "SCORED | 5.4.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_WARN_AGE'
      line: "PASS_WARN_AGE {{ rhel7cis_pass['warn_age'] }}"
  when:
      - rhel7cis_rule_5_4_1_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.3

- name: "SCORED | 5.4.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  lineinfile:
    create: true
    dest: /etc/default/useradd
    regexp: ^INACTIVE
    line: INACTIVE={{ var_account_disable_post_pw_expiration }}
  when:
      - rhel7cis_rule_5_4_1_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.4

- name: "SCORED | 5.4.2 | PATCH | Ensure system accounts are non-login"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_5_4_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.2
      - notimplemented

- name: "SCORED | 5.4.3 | PATCH | Ensure default group for the root account is GID 0"
  command: usermod -g 0 root
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_5_4_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.3

- name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive"
  block:
      - name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/bashrc"
        replace:
            path: /etc/bashrc
            regexp: '(^\s+umask) 002'
            replace: '\1 027'

      - name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/profile"
        replace:
            path: /etc/profile
            regexp: '(^\s+umask) 002'
            replace: '\1 027'

      - name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/bashrc"
        replace:
            path: /etc/bashrc
            regexp: '(^\s+umask) 022'
            replace: '\1 027'

      - name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/profile"
        replace:
            path: /etc/profile
            regexp: '(^\s+umask) 022'
            replace: '\1 027'

  when:
      - rhel7cis_rule_5_4_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.4

- name: "SCORED | 5.4.5 | PATCH | Ensure default user shell timeout is 900 seconds or less"
  lineinfile:
      state: present
      dest: '{{ item }}'
      regexp: '^TMOUT'
      line: "TMOUT={{ var_account_shell_timeout }}"
  loop:
    - /etc/profile
    - /etc/bashrc
  when:
      - rhel7cis_rule_5_4_5 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.5

# 5.5 Ensure root login is restricted to system console
- name: "NOTSCORED | 5.5 | PATCH | Ensure root login is restricted to system console"
  block:
    - name: Test for existence /etc/cron.allow
      stat:
        path: /etc/securetty
      register: securetty_empty

    - name: Direct root Logins Not Allowed
      shell: echo > /etc/securetty
      args:
        warn: false
      changed_when: securetty_empty.stat.size > 1
  when:
      - rhel7cis_rule_5_5 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.5

# Ensure access to the su command is restricted
- name: "SCORED | 5.6 | PATCH | Ensure access to the su command is restricted"
  lineinfile:
      state: present
      dest: /etc/pam.d/su
      regexp: '^(#)?auth\s+required\s+pam_wheel\.so'
      line: 'auth           required        pam_wheel.so use_uid'
  when:
      - rhel7cis_rule_5_6 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.6

- name: "SCORED | 5.6 | PATCH | Ensure access to the su command is restricted - wheel group contains root"
  user:
      name: root
      groups: wheel
  when:
      - rhel7cis_rule_5_6 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_5.6

# Section 6 | System Maintenance
# 6.1 System File Permissions
- name: "NOTSCORED | 6.1.1 | PATCH | Audit system file permissions"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_1_1 | bool
  tags:
      - level2
      - patch
      - rule_6.1.1
      - notimplemented

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_2 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.2

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_3 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.3

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_4 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.4

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      dest: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_5 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.5

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_6_1_6 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.6

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_7 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.7

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_6_1_8 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.8

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_9 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.9

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  shell: set -o pipefail && df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
  args:
    warn: false
    executable: /bin/bash
  register: world_writable_file
  changed_when: no
  when:
      - rhel7cis_rule_6_1_10 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.10
      - notimplemented

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  file:
    path: '{{ item }}'
    mode: o-w
  with_items:
      - '{{ world_writable_file.stdout_lines }}'
  when:
      - rhel7cis_rule_6_1_10 | bool
      - world_writable_file.stdout is defined

  tags:
      - level1
      - level2
      - patch
      - rule_6.1.10

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  shell: set -o pipefail && df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser
  args:
    warn: false
    executable: /bin/bash
  register: orphan_files
  changed_when: no
  when:
      - rhel7cis_rule_6_1_11 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.11

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  file:
    path: '{{ item }}'
    owner: root
  with_items:
      - '{{ orphan_files.stdout_lines }}'
  when:
      - rhel7cis_rule_6_1_11 | bool
      - orphan_files.stdout is defined
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.11

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  shell: set -o pipefail && df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup
  args:
    warn: false
    executable: /bin/bash
  register: orphan_dirs
  changed_when: no
  when:
      - rhel7cis_rule_6_1_12 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.12

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  file:
    path: '{{ item }}'
    group: root
  with_items:
      - '{{ orphan_dirs.stdout_lines }}'
  when:
      - rhel7cis_rule_6_1_12 | bool
      - orphan_dirs.stdout is defined
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.12

- name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_1_13 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.13
      - notimplemented

- name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_1_14 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.14
      - notimplemented

# 6.2 User and Group Settings
- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: no
  failed_when: no
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when:
      - empty_password_accounts.rc
      - rhel7cis_rule_6_2_1 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.1

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy '+' entries exist in /etc/passwd"
  shell: sed -i '/^+/ d' /etc/passwd
  args:
    warn: false
    executable: /bin/bash
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_6_2_2 | bool
  tags:
      - skip_ansible_lint
      - level1
      - level2
      - patch
      - rule_6.2.2

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  shell: sed -i '/^+/ d' /etc/shadow
  args:
    warn: false
    executable: /bin/bash
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_6_2_3 | bool
  tags:
      - skip_ansible_lint
      - level1
      - level2
      - patch
      - rule_6.2.3

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  shell: sed -i '/^+/ d' /etc/group
  args:
    warn: false
    executable: /bin/bash
  changed_when: no
  failed_when: no
  when:
      - rhel7cis_rule_6_2_4 | bool
  tags:
      - skip_ansible_lint
      - level1
      - level2
      - patch
      - rule_6.2.4

- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: no
  failed_when: no
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
      - uid_zero_accounts_except_root.rc
      - rhel7cis_rule_6_2_5 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.5

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_6 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.6
      - notimplemented

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_7 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.7
      - notimplemented

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_8 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.8
      - notimplemented

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_9 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.9
      - notimplemented

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_10 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.10
      - notimplemented

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  with_items: "{{ users.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_11 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.11

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_12 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.12

##############
#- name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc Files are not group or world accessible"
#  file:
#      mode: 0600
#      dest: "~{{ item }}/.netrc"
#  with_items: "{{ users.stdout_lines }}"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_6.2.13

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_14 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.14

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_15 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.15
      - notimplemented

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_16 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.16
      - notimplemented

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_17 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.17
      - notimplemented

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_18 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.18
      - notimplemented

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_19 | bool
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.19

- include: post.yml
  become: yes
  tags:
      - post_tasks
      - always