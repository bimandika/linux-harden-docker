 - hosts: all
   vars:
   tasks:
    - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install cramfs(\\s|$)"
        line: "install cramfs /bin/true"
        create: no
      check_mode: true
      register: audit_1111
      ignore_errors: true
    - name: debug_1111_exists
      debug:
       msg: "{% if audit_1111.changed == true %} 1.1.1.1 Ensure mounting of cramfs filesystems is disabled [NOT PASSED] {% else %} 1.1.1.1 Ensure mounting of cramfs filesystems is disabled [PASSED] {% endif %}"
      when: audit_1111 is success
      ignore_errors: true
    - name: debug_1111_failed
      debug:
       msg: "1.1.1.1 Ensure mounting of cramfs filesystems is disabled [NOT PASSED]"
      when: audit_1111 is failed
      ignore_errors: true
    - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install freevxfs(\\s|$)"
        line: "install freevxfs /bin/true"
        create: no
      check_mode: true
      register: audit_1112
      ignore_errors: true
    - name: debug_1112_exists
      debug:
       msg: "{% if audit_1112.changed == true %} 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled [NOT PASSED] {% else %} 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled [PASSED] {% endif %}"
      when: audit_1112 is success
      ignore_errors: true
    - name: debug_1112_failed
      debug:
       msg: "1.1.1.1 Ensure mounting of freevxfs filesystems is disabled [NOT PASSED]"
      when: audit_1112 is failed
      ignore_errors: true
    - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install jffs2(\\s|$)"
        line: "install jffs2 /bin/true"
        create: no
      check_mode: true
      register: audit_1113
      ignore_errors: true
    - name: debug_1113_exists
      debug:
       msg: "{% if audit_1113.changed == true %} 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled [NOT PASSED] {% else %} 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled [PASSED] {% endif %}"
      when: audit_1113 is success
      ignore_errors: true
    - name: debug_1113_failed
      debug:
       msg: "1.1.1.3 Ensure mounting of jffs2 filesystems is disabled [NOT PASSED]"
      when: audit_1113 is failed
      ignore_errors: true
    - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install hfs(\\s|$)"
        line: "install hfs /bin/true"
        create: no
      check_mode: true
      register: audit_1114
      ignore_errors: true
    - name: debug_1114_exists
      debug:
       msg: "{% if audit_1114.changed == true %} 1.1.1.4 Ensure mounting of hfs filesystems is disabled [NOT PASSED] {% else %} 1.1.1.4 Ensure mounting of hfs filesystems is disabled [PASSED] {% endif %}"
      when: audit_1114 is success
      ignore_errors: true
    - name: debug_1114_failed
      debug:
       msg: "1.1.1.4 Ensure mounting of hfs filesystems is disabled [NOT PASSED]"
      when: audit_1114 is failed
      ignore_errors: true
    - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install hfsplus(\\s|$)"
        line: "install hfsplus /bin/true"
        create: no
      check_mode: true
      register: audit_1115
      ignore_errors: true
    - name: debug_1115_exists
      debug:
       msg: "{% if audit_1115.changed == true %} 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled [NOT PASSED] {% else %} 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled [PASSED] {% endif %}"
      when: audit_1115 is success
      ignore_errors: true
    - name: debug_1115_failed
      debug:
       msg: "1.1.1.5 Ensure mounting of hfsplus filesystems is disabled [NOT PASSED]"
      when: audit_1115 is failed
      ignore_errors: true
    - name: 1.1.1.6 Ensure mounting of squashfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install squashfs(\\s|$)"
        line: "install squashfs /bin/true"
        create: no
      check_mode: true
      register: audit_1116
      ignore_errors: true
    - name: debug_1116_exists
      debug:
       msg: "{% if audit_1116.changed == true %} 1.1.1.6 Ensure mounting of squashfs filesystems is disabled [NOT PASSED] {% else %} 1.1.1.6 Ensure mounting of squashfs filesystems is disabled [PASSED] {% endif %}"
      when: audit_1116 is success
      ignore_errors: true
    - name: debug_1116_failed
      debug:
       msg: "1.1.1.6 Ensure mounting of squashfs filesystems is disabled [NOT PASSED]"
      when: audit_1116 is failed
      ignore_errors: true
    - name: 1.1.1.7 Ensure mounting of udf filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install udf(\\s|$)"
        line: "install udf /bin/true"
        create: no
      check_mode: true
      register: audit_1117
      ignore_errors: true
    - name: debug_1117_exists
      debug:
       msg: "{% if audit_1117.changed == true %} 1.1.1.7 Ensure mounting of udf filesystems is disabled [NOT PASSED] {% else %} 1.1.1.7 Ensure mounting of udf filesystems is disabled [PASSED] {% endif %}"
      when: audit_1117 is success
      ignore_errors: true
    - name: debug_1117_failed
      debug:
       msg: "1.1.1.7 Ensure mounting of udf filesystems is disabled [NOT PASSED]"
      when: audit_1117 is failed
      ignore_errors: true
    - name: 1.1.1.8 Ensure mounting of FAT filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install vfat(\\s|$)"
        line: "install vfat /bin/true"
        create: no
      check_mode: true
      register: audit_1118
      ignore_errors: true
    - name: debug_1118_exists
      debug:
       msg: "{% if audit_1117.changed == true %} 1.1.1.8 Ensure mounting of FAT filesystems is disabled [NOT PASSED] {% else %} 1.1.1.8 Ensure mounting of FAT filesystems is disabled [PASSED] {% endif %}"
      when: audit_1118 is success
      ignore_errors: true
    - name: debug_1118_failed
      debug:
       msg: "1.1.1.8 Ensure mounting of FAT filesystems is disabled [NOT PASSED]"
      when: audit_1118 is failed
      ignore_errors: true
    - name: 1.1.2 Ensure separate partition exists for /tmp
      command: findmnt --fstab '/tmp'
      register: audit_112
      ignore_errors: true
    - name: debug_112_success
      debug:
        msg: "1.1.2 Ensure separate partition exists for /tmp [PASSED]"
      when: audit_112 is success
    - name: debug_112_failed
      debug:
        msg: "1.1.2 Ensure separate partition exists for /tmp [NOT PASSED]"
      when: audit_112 is failed
    - name: 1.1.3 Ensure nodev option set on /tmp partition
      shell: mount | grep /tmp | grep nodev
      register: audit_113
      ignore_errors: true
    - name: debug_113_success
      debug:
        msg: "1.1.3 Ensure nodev option set on /tmp partition [PASSED]"
      when: audit_113 is success
    - name: debug_113_failed
      debug:
        msg: "1.1.3 Ensure nodev option set on /tmp partition [NOT PASSED]"
      when: audit_113 is failed
    - name: 1.1.4 Ensure nosuid option set on /tmp partition
      shell: mount | grep /tmp | grep nosuid
      register: audit_114
      ignore_errors: true
    - name: debug_114_success
      debug:
        msg: "1.1.4 Ensure nosuid option set on /tmp partition [PASSED]"
      when: audit_114 is success
    - name: debug_114_failed
      debug:
        msg: "1.1.4 Ensure nosuid option set on /tmp partition [NOT PASSED]"
      when: audit_114 is failed
    - name: 1.1.5 Ensure noexec option set on /tmp partition
      shell: mount | grep /tmp | grep noexec
      register: audit_115
      ignore_errors: true
    - name: debug_115_success
      debug:
        msg: "1.1.5 Ensure noexec option set on /tmp partition [PASSED]"
      when: audit_115 is success
    - name: debug_115_failed
      debug:
        msg: "1.1.5 Ensure noexec option set on /tmp partition [NOT PASSED]"
      when: audit_115 is failed
    - name: 1.1.6 Ensure separate partition exists for /var
      command: findmnt --fstab '/var'
      register: audit_116
      ignore_errors: true
    - name: debug_116_success
      debug:
        msg: "1.1.6 Ensure separate partition exists for /var [PASSED]"
      when: audit_116 is success
    - name: debug_116_failed
      debug:
        msg: "1.1.6 Ensure separate partition exists for /var [NOT PASSED]"
      when: audit_116 is failed
    - name: 1.1.7 Ensure separate partition exists for /var/tmp
      command: findmnt --fstab '/var/tmp'
      register: audit_117
      ignore_errors: true
    - name: debug_117_success
      debug:
        msg: "1.1.7 Ensure separate partition exists for /var/tmp [PASSED]"
      when: audit_117 is success
    - name: debug_117_failed
      debug:
        msg: "1.1.7 Ensure separate partition exists for /var/tmp [NOT PASSED]"
      when: audit_117 is failed
    - name: 1.1.8 Ensure nodev option set on /var/tmp partition
      shell: mount | grep /var/tmp | grep nodev
      register: audit_118
      ignore_errors: true
    - name: debug_118_success
      debug:
        msg: "1.1.8 Ensure nodev option set on /var/tmp partition [PASSED]"
      when: audit_118 is success
    - name: debug_118_failed
      debug:
        msg: "1.1.8 Ensure nodev option set on /var/tmp partition [NOT PASSED]"
      when: audit_118 is failed
    - name: 1.1.9 Ensure nosuid option set on /var/tmp partition
      shell: mount | grep /var/tmp | grep nosuid
      register: audit_119
      ignore_errors: true
    - name: debug_119_success
      debug:
        msg: "1.1.9 Ensure nosuid option set on /var/tmp partition [PASSED]"
      when: audit_119 is success
    - name: debug_119_failed
      debug:
        msg: "1.1.9 Ensure nosuid option set on /var/tmp partition [NOT PASSED]"
      when: audit_119 is failed
    - name: 1.1.10 Ensure noexec option set on /var/tmp partition
      shell: mount | grep /var/tmp | grep noexec
      register: audit_1110
      ignore_errors: true
    - name: debug_1110_success
      debug:
        msg: "1.1.10 Ensure noexec option set on /var/tmp partition [PASSED]"
      when: audit_1110 is success
    - name: debug_1110_failed
      debug:
        msg: "1.1.10 Ensure noexec option set on /var/tmp partition [NOT PASSED]"
      when: audit_1110 is failed
    - name: 1.1.11 Ensure separate partition exists for /var/log
      command: findmnt --fstab '/var/log'
      register: audit_11111
      ignore_errors: true
    - name: debug_11111_success
      debug:
        msg: "1.1.11 Ensure separate partition exists for /var/log [PASSED]"
      when: audit_11111 is success
    - name: debug_11111_failed
      debug:
        msg: "1.1.11 Ensure separate partition exists for /var/log [NOT PASSED]"
      when: audit_11111 is failed
    - name: 1.1.12 Ensure separate partition exists for /var/log/audit
      command: findmnt --fstab '/var/log'
      register: audit_11112
      ignore_errors: true
    - name: debug_11112_success
      debug:
        msg: "1.1.12 Ensure separate partition exists for /var/log/audit [PASSED]"
      when: audit_11112 is success
    - name: debug_11112_failed
      debug:
        msg: "1.1.12 Ensure separate partition exists for /var/log/audit [NOT PASSED]"
      when: audit_11112 is failed
    - name: 1.1.13 Ensure separate partition exists for /home
      command: findmnt --fstab '/home'
      register: audit_11113
      ignore_errors: true
    - name: debug_11113_success
      debug:
        msg: "1.1.13 Ensure separate partition exists for /home [PASSED]"
      when: audit_11113 is success
    - name: debug_11113_failed
      debug:
        msg: "1.1.13 Ensure separate partition exists for /home [NOT PASSED]"
      when: audit_11113 is failed
    - name: 1.1.14 Ensure nodev option set on /home partition
      shell: mount | grep /home | grep nodev
      register: audit_11114
      ignore_errors: true
    - name: debug_11114_success
      debug:
        msg: "1.1.14 Ensure nodev option set on /home partition [PASSED]"
      when: audit_11114 is success
    - name: debug_11114_failed
      debug:
        msg: "1.1.14 Ensure nodev option set on /home partition [NOT PASSED]"
      when: audit_11114 is failed
    - name: 1.1.15 Ensure nodev option set on /dev/shm partition
      shell: mount | grep /dev/shm | grep nodev
      register: audit_11115
      ignore_errors: true
    - name: debug_11115_success
      debug:
        msg: "1.1.15 Ensure nodev option set on /dev/shm partition [PASSED]"
      when: audit_11115 is success
    - name: debug_11115_failed
      debug:
        msg: "1.1.15 Ensure nodev option set on /dev/shm partition [NOT PASSED]"
      when: audit_11115 is failed
    - name: 1.1.16 Ensure nosuid option set on /dev/shm partition
      shell: mount | grep /dev/shm | grep nosuid
      register: audit_11116
      ignore_errors: true
    - name: debug_11116_success
      debug:
        msg: "1.1.16 Ensure nosuid option set on /dev/shm partition [PASSED]"
      when: audit_11116 is success
    - name: debug_11116_failed
      debug:
        msg: "1.1.16 Ensure nosuid option set on /dev/shm partition [NOT PASSED]"
      when: audit_11116 is failed
    - name: 1.1.17 Ensure noexec option set on /dev/shm partition
      shell: mount | grep /dev/shm | grep noexec
      register: audit_11117
      ignore_errors: true
    - name: debug_11117_success
      debug:
        msg: "1.1.17 Ensure noexec option set on /dev/shm partition [PASSED]"
      when: audit_11117 is success
    - name: debug_11117_failed
      debug:
        msg: "1.1.17 Ensure noexec option set on /dev/shm partition [NOT PASSED]"
      when: audit_11117 is failed
    - name: 1.1.21 Ensure sticky bit is set on all world-writable directories
      shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
      register: audit_11121
      ignore_errors: true
    - name: debug_11121_failed
      debug:
        msg: "1.1.21 Ensure sticky bit is set on all world-writable directories [NOT PASSED]"
      when: audit_11121 is success
    - name: debug_11121_success
      debug:
        msg: "1.1.21 Ensure sticky bit is set on all world-writable directories [PASSED]"
      when: audit_11121 is failed
    - name: 1.1.22 Disable Automounting
      systemd:
       name: autofs
       enabled: yes
      check_mode: true
      register: audit_11122
      ignore_errors: true
    - name: debug_11122_failed
      debug:
        msg: "1.1.22 Disable Automounting [NOT PASSED]"
      when: audit_11122.changed == false
    - name: debug_11122_success
      debug:
        msg: "1.1.22 Disable Automounting [PASSED]"
      when: audit_11122.changed                          
    - name: 1.2.1 Ensure package manager repositories are configured
      find:
       paths: /etc/yum.repos.d/
       patterns: "*.repo"
      register: audit_121
      ignore_errors: true
    - name: debug_121_success
      debug:
        msg: "{% if audit_121.examined == 0 %} 1.2.1 Ensure package manager repositories are configured [NOT PASSED] {% else %} 1.2.1 Ensure package manager repositories are configured [PASSED] {% endif %}"
    - name: 1.2.2 Ensure GPG keys are configured
      command: rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'
      ignore_errors: true
      register: audit_122
    - name: debug_122_success
      debug:
        msg: "1.2.2 Ensure GPG keys are configured [PASSED]"
      when: audit_122.rc == 0
    - name: debug_122_failed
      debug:
        msg: "1.2.2 Ensure GPG keys are configured [NOT PASSED]"
      when: audit_122.rc == 1
    - name: 1.2.3 Ensure gpgcheck is globally activated
      lineinfile:
        path: /etc/yum.conf
        line: "gpgcheck=1"
        state: present
      check_mode: yes
      ignore_errors: true
      register: audit_123
    - name: debug_123
      debug:
       msg: "{% if audit_123.changed == true %} 1.2.3 Ensure gpgcheck is globally activated [NOT PASSED] {% else %} 1.2.3 Ensure gpgcheck is globally activated [PASSED] {% endif %}"
    - name: 1.3.1 Ensure AIDE is installed
      yum:
       name: aide
       state: present
      ignore_errors: true
      register: audit_131
    - name: debug_131_success
      debug:
        msg: "1.3.1 Ensure AIDE is installed [PASSED]"
      when: audit_131.rc == 0
    - name: debug_131_failed
      debug:
        msg: "1.3.1 Ensure AIDE is installed [NOT PASSED]"
      when: audit_131.rc == 126
    - name: 1.3.2 Ensure filesystem integrity is regularly checked
      shell: crontab -u root -l | grep aide
      ignore_errors: true
      register: audit_132
    - name: debug_132_success
      debug:
        msg: "1.3.2 Ensure filesystem integrity is regularly checked [PASSED]"
      when: audit_132.rc == 0
    - name: debug_132_failed
      debug:
        msg: "1.3.2 Ensure filesystem integrity is regularly checked [NOT PASSED]"
      when: audit_132.rc == 1
    - name: 1.4.1 Ensure permissions on bootloader config are configured
      file:
       path: /boot/grub2/grub.cfg
       owner: root
       group: root
       mode: '0600'
      check_mode: yes
      ignore_errors: true
      register: audit_141
    - name: debug_141_success
      debug:
        msg: "{% if audit_141.changed == true %} 1.4.1 Ensure permissions on bootloader config are configured [NOT PASSED] {% else %} 1.4.1 Ensure permissions on bootloader config are configured [PASSED] {% endif %}"
      when: audit_141 is success
    - name: debug_141_failed
      debug:
        msg: "1.4.1 Ensure permissions on bootloader config are configured [NOT PASSED]"
      when: audit_141 is failed
    - name: 1.4.2 Ensure bootloader password is set
      shell: grep GRUB2_PASSWORD /boot/grub2/grub.cfg
      ignore_errors: true
      register: audit_142
    - name: debug_142
      debug:
        msg: "{% if audit_142.rc == 1 %} 1.4.2 Ensure bootloader password is set [NOT PASSED] {% else %} 1.4.2 Ensure bootloader password is set [PASSED] {% endif %}"
    - name: 1.4.3.1 Ensure authentication required for single user mode 
      shell: grep /sbin/sulogin /usr/lib/systemd/system/emergency.service 
      ignore_errors: true
      register: audit_1431
    - name: debug
      debug:
       msg: "{% if audit_1431.rc == 0 %} 1.4.3.1 Ensure authentication required for single user mode [PASSED] {% else %} 1.4.3.1 Ensure authentication required for single user mode [NOT PASSED] {% endif %}"
    - name: 1.4.3.2 Ensure authentication required for single user mode 
      shell: grep /sbin/sulogin /usr/lib/systemd/system/rescue.service 
      ignore_errors: true
      register: audit_1432
    - name: debug
      debug:
       msg: "{% if audit_1432.rc == 0 %} 1.4.3.2 Ensure authentication required for single user mode [PASSED] {% else %} 1.4.3.2 Ensure authentication required for single user mode [NOT PASSED] {% endif %}"
    - name: 1.5.1.1 Ensure core dumps are restricted 
      shell: grep "hard core" /etc/security/limits.conf /etc/security/limits.d/*
      register: audit_1511
      ignore_errors: true
    - name: debug_1511
      debug:
       msg: "{% if audit_1511.rc == 1 %} 1.5.1.1 Ensure core dumps are restricted [PASSED] {% else %} 1.5.1.1 Ensure core dumps are restricted [NOT PASSED] {% endif %}"
    - name: 1.5.1.2 Ensure core dumps are restricted 
      shell: sysctl fs.suid_dumpable
      register: audit_1512
      ignore_errors: true
    - name: debug_1512
      debug:
        msg: "{% if audit_1512.stdout | join('') is search('fs.suid_dumpable = 0') %} 1.5.1.2 Ensure core dumps are restricted [PASSED] {% else %} 1.5.1.2 Ensure core dumps are restricted  [NOT PASSED] {% endif %}"
    - name: 1.5.2 Ensure XD/NX support is enabled
      shell: set -o pipefail && dmesg|grep -E "NX|XD" | grep " active"
      register: audit_152
      ignore_errors: true
    - name: debug_152
      debug:
        msg: "{% if audit_152.stdout | join('') is search('protection: active') %} 1.5.2 Ensure XD/NX support is enabled [PASSED] {% else %} 1.5.2 Ensure XD/NX support is enabled [NOT PASSED] {% endif %}"
    - name: 1.5.3 Ensure address space layout randomization (ASLR) is enabled
      shell: sysctl kernel.randomize_va_space
      register: audit_153
      ignore_errors: true
    - name: debug_153
      debug:
        msg: "{% if audit_153.stdout | join('') is search('kernel.randomize_va_space = 2') %} 1.5.3 Ensure address space layout randomization (ASLR) is enabled [PASSED] {% else %} 1.5.3 Ensure address space layout randomization (ASLR) is enabled [NOT PASSED] {% endif %}"
    - name: 1.5.4 Ensure prelink is disabled
      shell: rpm -q prelink
      register: audit_154
      ignore_errors: true
    - name: debug_154
      debug:
        msg: "{% if audit_154.rc == 1 %} 1.5.4 Ensure prelink is disabled [PASSED] {% else %} 1.5.4 Ensure prelink is disabled [NOT PASSED] {% endif %}"
    - name: 1.6.1.1.1 Ensure SELinux is not disabled in bootloader configuration 
      shell: grep "^\s*linux" /boot/grub2/grub.cfg
      register: audit_16111
      ignore_errors: true
    - name: debug_16111
      debug:
        msg: "{% if audit_16111.stdout | join('') is search('selinux=0') %} 1.6.1.1.1 Ensure SELinux is not disabled in bootloader configuration [NOT PASSED] {% else %} 1.6.1.1.1 Ensure SELinux is not disabled in bootloader configuration [PASSED] {% endif %}"
    - name: 1.6.1.1.2 Ensure SELinux is not disabled in bootloader configuration
      shell: grep "^\s*linux" /boot/grub2/grub.cfg
      register: audit_16112
      ignore_errors: true
    - name: debug_16112
      debug:
        msg: "{% if audit_16112.stdout | join('') is search('enforcing=0') %} 1.6.1.1.2 Ensure SELinux is not disabled in bootloader configuration [NOT PASSED] {% else %} 1.6.1.1.2 Ensure SELinux is not disabled in bootloader configuration [PASSED] {% endif %}"
    - name: 1.6.1.2 Ensure the SELinux state is enforcing
      selinux:
        conf: /etc/selinux/config
        policy: targeted
        state: enforcing
      check_mode: true
      register: audit_1612
      ignore_errors: true
    - name: debug_1612
      debug:
        msg: "{% if audit_1612.reboot_required == true %} 1.6.1.2 Ensure the SELinux state is enforcing [NOT PASSED] {% else %} 1.6.1.2 Ensure the SELinux state is enforcing [PASSED] {% endif %}"
    - name: 1.6.1.3 Ensure SELinux policy is configured
      shell: sestatus
      register: audit_1613
      ignore_errors: true
    - name: debug_1613
      debug:
        msg: "{% if audit_1613.stdout | join('') is search('SELinux status:                 disabled') %} 1.6.1.3 Ensure SELinux policy is configured [NOT PASSED] {% else %} 1.6.1.3 Ensure SELinux policy is configured [PASSED] {% endif %}"
    - name: 1.6.1.4 Ensure SETroubleshoot is not installed
      shell: rpm -q setroubleshoot
      register: audit_1614
      ignore_errors: true
    - name: debug_1614
      debug:
        msg: "{% if audit_1614.rc == 0 %} 1.6.1.4 Ensure SETroubleshoot is not installed [NOT PASSED] {% else %}1.6.1.4 Ensure SETroubleshoot is not installed [PASSED] {% endif %}"
    - name: 1.6.1.5 Ensure the MCS Translation Service (mcstrans) is not installed
      shell: rpm -q mcstrans
      register: audit_1615
      ignore_errors: true
    - name: debug_1615
      debug:
        msg: "{% if audit_1615.rc == 0 %} 1.6.1.5 Ensure the MCS Translation Service (mcstrans) is not installed [NOT PASSED] {% else %} 1.6.1.5 Ensure the MCS Translation Service (mcstrans) is not installed [PASSED] {% endif %}"
    - name: 1.6.1.6 Ensure no unconfined daemons exist
      shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
      register: audit_1616
      ignore_errors: true    
    - name: debug_1615
      debug:
        msg: "{% if audit_1615.rc == 0 %} 1.6.1.6 Ensure no unconfined daemons exist [PASSED] {% else %} 1.6.1.6 Ensure no unconfined daemons exist [NOT PASSED] {% endif %}"

